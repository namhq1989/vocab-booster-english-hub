//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var VocabularyExamples = newVocabularyExamplesTable("public", "vocabulary_examples", "")

type vocabularyExamplesTable struct {
	postgres.Table

	// Columns
	ID           postgres.ColumnString
	VocabularyID postgres.ColumnString
	Audio        postgres.ColumnString
	Content      postgres.ColumnString
	Translated   postgres.ColumnString
	MainWord     postgres.ColumnString
	PosTags      postgres.ColumnString
	Sentiment    postgres.ColumnString
	Dependencies postgres.ColumnString
	Verbs        postgres.ColumnString
	Level        postgres.ColumnString
	CreatedAt    postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type VocabularyExamplesTable struct {
	vocabularyExamplesTable

	EXCLUDED vocabularyExamplesTable
}

// AS creates new VocabularyExamplesTable with assigned alias
func (a VocabularyExamplesTable) AS(alias string) *VocabularyExamplesTable {
	return newVocabularyExamplesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new VocabularyExamplesTable with assigned schema name
func (a VocabularyExamplesTable) FromSchema(schemaName string) *VocabularyExamplesTable {
	return newVocabularyExamplesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new VocabularyExamplesTable with assigned table prefix
func (a VocabularyExamplesTable) WithPrefix(prefix string) *VocabularyExamplesTable {
	return newVocabularyExamplesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new VocabularyExamplesTable with assigned table suffix
func (a VocabularyExamplesTable) WithSuffix(suffix string) *VocabularyExamplesTable {
	return newVocabularyExamplesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newVocabularyExamplesTable(schemaName, tableName, alias string) *VocabularyExamplesTable {
	return &VocabularyExamplesTable{
		vocabularyExamplesTable: newVocabularyExamplesTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newVocabularyExamplesTableImpl("", "excluded", ""),
	}
}

func newVocabularyExamplesTableImpl(schemaName, tableName, alias string) vocabularyExamplesTable {
	var (
		IDColumn           = postgres.StringColumn("id")
		VocabularyIDColumn = postgres.StringColumn("vocabulary_id")
		AudioColumn        = postgres.StringColumn("audio")
		ContentColumn      = postgres.StringColumn("content")
		TranslatedColumn   = postgres.StringColumn("translated")
		MainWordColumn     = postgres.StringColumn("main_word")
		PosTagsColumn      = postgres.StringColumn("pos_tags")
		SentimentColumn    = postgres.StringColumn("sentiment")
		DependenciesColumn = postgres.StringColumn("dependencies")
		VerbsColumn        = postgres.StringColumn("verbs")
		LevelColumn        = postgres.StringColumn("level")
		CreatedAtColumn    = postgres.TimestampzColumn("created_at")
		allColumns         = postgres.ColumnList{IDColumn, VocabularyIDColumn, AudioColumn, ContentColumn, TranslatedColumn, MainWordColumn, PosTagsColumn, SentimentColumn, DependenciesColumn, VerbsColumn, LevelColumn, CreatedAtColumn}
		mutableColumns     = postgres.ColumnList{VocabularyIDColumn, AudioColumn, ContentColumn, TranslatedColumn, MainWordColumn, PosTagsColumn, SentimentColumn, DependenciesColumn, VerbsColumn, LevelColumn, CreatedAtColumn}
	)

	return vocabularyExamplesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		VocabularyID: VocabularyIDColumn,
		Audio:        AudioColumn,
		Content:      ContentColumn,
		Translated:   TranslatedColumn,
		MainWord:     MainWordColumn,
		PosTags:      PosTagsColumn,
		Sentiment:    SentimentColumn,
		Dependencies: DependenciesColumn,
		Verbs:        VerbsColumn,
		Level:        LevelColumn,
		CreatedAt:    CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
