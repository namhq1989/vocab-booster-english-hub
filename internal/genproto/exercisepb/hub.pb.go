// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: exercisepb/hub.proto

package exercisepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewExerciseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VocabularyExampleId string        `protobuf:"bytes,1,opt,name=vocabularyExampleId,proto3" json:"vocabularyExampleId,omitempty"`
	Level               string        `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Content             *Multilingual `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Vocabulary          string        `protobuf:"bytes,4,opt,name=vocabulary,proto3" json:"vocabulary,omitempty"`
	CorrectAnswer       string        `protobuf:"bytes,5,opt,name=correctAnswer,proto3" json:"correctAnswer,omitempty"`
	Options             []string      `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *NewExerciseRequest) Reset() {
	*x = NewExerciseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExerciseRequest) ProtoMessage() {}

func (x *NewExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExerciseRequest.ProtoReflect.Descriptor instead.
func (*NewExerciseRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{0}
}

func (x *NewExerciseRequest) GetVocabularyExampleId() string {
	if x != nil {
		return x.VocabularyExampleId
	}
	return ""
}

func (x *NewExerciseRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *NewExerciseRequest) GetContent() *Multilingual {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NewExerciseRequest) GetVocabulary() string {
	if x != nil {
		return x.Vocabulary
	}
	return ""
}

func (x *NewExerciseRequest) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *NewExerciseRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

type NewExerciseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewExerciseResponse) Reset() {
	*x = NewExerciseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExerciseResponse) ProtoMessage() {}

func (x *NewExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExerciseResponse.ProtoReflect.Descriptor instead.
func (*NewExerciseResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{1}
}

func (x *NewExerciseResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateExerciseAudioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VocabularyExampleId string `protobuf:"bytes,1,opt,name=vocabularyExampleId,proto3" json:"vocabularyExampleId,omitempty"`
	Audio               string `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *UpdateExerciseAudioRequest) Reset() {
	*x = UpdateExerciseAudioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExerciseAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseAudioRequest) ProtoMessage() {}

func (x *UpdateExerciseAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseAudioRequest.ProtoReflect.Descriptor instead.
func (*UpdateExerciseAudioRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateExerciseAudioRequest) GetVocabularyExampleId() string {
	if x != nil {
		return x.VocabularyExampleId
	}
	return ""
}

func (x *UpdateExerciseAudioRequest) GetAudio() string {
	if x != nil {
		return x.Audio
	}
	return ""
}

type UpdateExerciseAudioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateExerciseAudioResponse) Reset() {
	*x = UpdateExerciseAudioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExerciseAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseAudioResponse) ProtoMessage() {}

func (x *UpdateExerciseAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseAudioResponse.ProtoReflect.Descriptor instead.
func (*UpdateExerciseAudioResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{3}
}

type AnswerExerciseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ExerciseId string `protobuf:"bytes,2,opt,name=exerciseId,proto3" json:"exerciseId,omitempty"`
	IsCorrect  bool   `protobuf:"varint,3,opt,name=isCorrect,proto3" json:"isCorrect,omitempty"`
}

func (x *AnswerExerciseRequest) Reset() {
	*x = AnswerExerciseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerExerciseRequest) ProtoMessage() {}

func (x *AnswerExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerExerciseRequest.ProtoReflect.Descriptor instead.
func (*AnswerExerciseRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{4}
}

func (x *AnswerExerciseRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AnswerExerciseRequest) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *AnswerExerciseRequest) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type AnswerExerciseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextReviewAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=nextReviewAt,proto3" json:"nextReviewAt,omitempty"`
}

func (x *AnswerExerciseResponse) Reset() {
	*x = AnswerExerciseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerExerciseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerExerciseResponse) ProtoMessage() {}

func (x *AnswerExerciseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerExerciseResponse.ProtoReflect.Descriptor instead.
func (*AnswerExerciseResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{5}
}

func (x *AnswerExerciseResponse) GetNextReviewAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextReviewAt
	}
	return nil
}

type GetUserExercisesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CollectionId string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	Lang         string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetUserExercisesRequest) Reset() {
	*x = GetUserExercisesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserExercisesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserExercisesRequest) ProtoMessage() {}

func (x *GetUserExercisesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserExercisesRequest.ProtoReflect.Descriptor instead.
func (*GetUserExercisesRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserExercisesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserExercisesRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *GetUserExercisesRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type GetUserExercisesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercises []*UserExercise `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
}

func (x *GetUserExercisesResponse) Reset() {
	*x = GetUserExercisesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserExercisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserExercisesResponse) ProtoMessage() {}

func (x *GetUserExercisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserExercisesResponse.ProtoReflect.Descriptor instead.
func (*GetUserExercisesResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserExercisesResponse) GetExercises() []*UserExercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type GetUserReadyForReviewExercisesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Lang     string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Timezone string `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *GetUserReadyForReviewExercisesRequest) Reset() {
	*x = GetUserReadyForReviewExercisesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReadyForReviewExercisesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReadyForReviewExercisesRequest) ProtoMessage() {}

func (x *GetUserReadyForReviewExercisesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReadyForReviewExercisesRequest.ProtoReflect.Descriptor instead.
func (*GetUserReadyForReviewExercisesRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserReadyForReviewExercisesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserReadyForReviewExercisesRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *GetUserReadyForReviewExercisesRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type GetUserReadyForReviewExercisesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercises []*UserExercise `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
}

func (x *GetUserReadyForReviewExercisesResponse) Reset() {
	*x = GetUserReadyForReviewExercisesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReadyForReviewExercisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReadyForReviewExercisesResponse) ProtoMessage() {}

func (x *GetUserReadyForReviewExercisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReadyForReviewExercisesResponse.ProtoReflect.Descriptor instead.
func (*GetUserReadyForReviewExercisesResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserReadyForReviewExercisesResponse) GetExercises() []*UserExercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type ChangeExerciseFavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ExerciseId string `protobuf:"bytes,2,opt,name=exerciseId,proto3" json:"exerciseId,omitempty"`
	IsFavorite bool   `protobuf:"varint,3,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
}

func (x *ChangeExerciseFavoriteRequest) Reset() {
	*x = ChangeExerciseFavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeExerciseFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeExerciseFavoriteRequest) ProtoMessage() {}

func (x *ChangeExerciseFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeExerciseFavoriteRequest.ProtoReflect.Descriptor instead.
func (*ChangeExerciseFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeExerciseFavoriteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChangeExerciseFavoriteRequest) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *ChangeExerciseFavoriteRequest) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type ChangeExerciseFavoriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFavorite bool `protobuf:"varint,1,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
}

func (x *ChangeExerciseFavoriteResponse) Reset() {
	*x = ChangeExerciseFavoriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeExerciseFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeExerciseFavoriteResponse) ProtoMessage() {}

func (x *ChangeExerciseFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeExerciseFavoriteResponse.ProtoReflect.Descriptor instead.
func (*ChangeExerciseFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeExerciseFavoriteResponse) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type GetUserFavoriteExercisesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Lang      string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=pageToken,proto3" json:"pageToken,omitempty"`
}

func (x *GetUserFavoriteExercisesRequest) Reset() {
	*x = GetUserFavoriteExercisesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFavoriteExercisesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFavoriteExercisesRequest) ProtoMessage() {}

func (x *GetUserFavoriteExercisesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFavoriteExercisesRequest.ProtoReflect.Descriptor instead.
func (*GetUserFavoriteExercisesRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserFavoriteExercisesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserFavoriteExercisesRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *GetUserFavoriteExercisesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type GetUserFavoriteExercisesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercises     []*UserExercise `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=nextPageToken,proto3" json:"nextPageToken,omitempty"`
}

func (x *GetUserFavoriteExercisesResponse) Reset() {
	*x = GetUserFavoriteExercisesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFavoriteExercisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFavoriteExercisesResponse) ProtoMessage() {}

func (x *GetUserFavoriteExercisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFavoriteExercisesResponse.ProtoReflect.Descriptor instead.
func (*GetUserFavoriteExercisesResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserFavoriteExercisesResponse) GetExercises() []*UserExercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *GetUserFavoriteExercisesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetUserStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Timezone string `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *GetUserStatsRequest) Reset() {
	*x = GetUserStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStatsRequest) ProtoMessage() {}

func (x *GetUserStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStatsRequest.ProtoReflect.Descriptor instead.
func (*GetUserStatsRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserStatsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserStatsRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type GetUserStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mastered         int32 `protobuf:"varint,1,opt,name=mastered,proto3" json:"mastered,omitempty"`
	WaitingForReview int32 `protobuf:"varint,2,opt,name=waitingForReview,proto3" json:"waitingForReview,omitempty"`
}

func (x *GetUserStatsResponse) Reset() {
	*x = GetUserStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStatsResponse) ProtoMessage() {}

func (x *GetUserStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStatsResponse.ProtoReflect.Descriptor instead.
func (*GetUserStatsResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserStatsResponse) GetMastered() int32 {
	if x != nil {
		return x.Mastered
	}
	return 0
}

func (x *GetUserStatsResponse) GetWaitingForReview() int32 {
	if x != nil {
		return x.WaitingForReview
	}
	return 0
}

type GetExerciseCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Lang   string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetExerciseCollectionsRequest) Reset() {
	*x = GetExerciseCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExerciseCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseCollectionsRequest) ProtoMessage() {}

func (x *GetExerciseCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseCollectionsRequest.ProtoReflect.Descriptor instead.
func (*GetExerciseCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{16}
}

func (x *GetExerciseCollectionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetExerciseCollectionsRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type GetExerciseCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*ExerciseCollection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *GetExerciseCollectionsResponse) Reset() {
	*x = GetExerciseCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExerciseCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseCollectionsResponse) ProtoMessage() {}

func (x *GetExerciseCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseCollectionsResponse.ProtoReflect.Descriptor instead.
func (*GetExerciseCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{17}
}

func (x *GetExerciseCollectionsResponse) GetCollections() []*ExerciseCollection {
	if x != nil {
		return x.Collections
	}
	return nil
}

type GetUserRecentExercisesChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Timezone string                 `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	From     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetUserRecentExercisesChartRequest) Reset() {
	*x = GetUserRecentExercisesChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecentExercisesChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecentExercisesChartRequest) ProtoMessage() {}

func (x *GetUserRecentExercisesChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecentExercisesChartRequest.ProtoReflect.Descriptor instead.
func (*GetUserRecentExercisesChartRequest) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserRecentExercisesChartRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRecentExercisesChartRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *GetUserRecentExercisesChartRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetUserRecentExercisesChartRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetUserRecentExercisesChartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercises []*UserAggregatedExercise `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
}

func (x *GetUserRecentExercisesChartResponse) Reset() {
	*x = GetUserRecentExercisesChartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exercisepb_hub_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRecentExercisesChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRecentExercisesChartResponse) ProtoMessage() {}

func (x *GetUserRecentExercisesChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exercisepb_hub_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRecentExercisesChartResponse.ProtoReflect.Descriptor instead.
func (*GetUserRecentExercisesChartResponse) Descriptor() ([]byte, []int) {
	return file_exercisepb_hub_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserRecentExercisesChartResponse) GetExercises() []*UserAggregatedExercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

var File_exercisepb_hub_proto protoreflect.FileDescriptor

var file_exercisepb_hub_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2f, 0x68, 0x75, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01,
	0x0a, 0x12, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x25, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0x1d, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x15,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x41, 0x74, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x22, 0x52, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x60, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x09, 0x65, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x22, 0x40, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x22, 0x6b, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x80, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x5e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x4b, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x62, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb4,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x32, 0xcc,
	0x08, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x12, 0x1e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x26, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x23, 0x2e,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x31, 0x2e,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x29, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x29, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x2e, 0x2e, 0x65, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xa0, 0x01,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62,
	0x42, 0x08, 0x48, 0x75, 0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x2d, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x65, 0x6e, 0x67, 0x6c,
	0x69, 0x73, 0x68, 0x2d, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x65, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x2f,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58,
	0xaa, 0x02, 0x0a, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0xca, 0x02, 0x0a,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0xe2, 0x02, 0x16, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exercisepb_hub_proto_rawDescOnce sync.Once
	file_exercisepb_hub_proto_rawDescData = file_exercisepb_hub_proto_rawDesc
)

func file_exercisepb_hub_proto_rawDescGZIP() []byte {
	file_exercisepb_hub_proto_rawDescOnce.Do(func() {
		file_exercisepb_hub_proto_rawDescData = protoimpl.X.CompressGZIP(file_exercisepb_hub_proto_rawDescData)
	})
	return file_exercisepb_hub_proto_rawDescData
}

var file_exercisepb_hub_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_exercisepb_hub_proto_goTypes = []interface{}{
	(*NewExerciseRequest)(nil),                     // 0: exercisepb.NewExerciseRequest
	(*NewExerciseResponse)(nil),                    // 1: exercisepb.NewExerciseResponse
	(*UpdateExerciseAudioRequest)(nil),             // 2: exercisepb.UpdateExerciseAudioRequest
	(*UpdateExerciseAudioResponse)(nil),            // 3: exercisepb.UpdateExerciseAudioResponse
	(*AnswerExerciseRequest)(nil),                  // 4: exercisepb.AnswerExerciseRequest
	(*AnswerExerciseResponse)(nil),                 // 5: exercisepb.AnswerExerciseResponse
	(*GetUserExercisesRequest)(nil),                // 6: exercisepb.GetUserExercisesRequest
	(*GetUserExercisesResponse)(nil),               // 7: exercisepb.GetUserExercisesResponse
	(*GetUserReadyForReviewExercisesRequest)(nil),  // 8: exercisepb.GetUserReadyForReviewExercisesRequest
	(*GetUserReadyForReviewExercisesResponse)(nil), // 9: exercisepb.GetUserReadyForReviewExercisesResponse
	(*ChangeExerciseFavoriteRequest)(nil),          // 10: exercisepb.ChangeExerciseFavoriteRequest
	(*ChangeExerciseFavoriteResponse)(nil),         // 11: exercisepb.ChangeExerciseFavoriteResponse
	(*GetUserFavoriteExercisesRequest)(nil),        // 12: exercisepb.GetUserFavoriteExercisesRequest
	(*GetUserFavoriteExercisesResponse)(nil),       // 13: exercisepb.GetUserFavoriteExercisesResponse
	(*GetUserStatsRequest)(nil),                    // 14: exercisepb.GetUserStatsRequest
	(*GetUserStatsResponse)(nil),                   // 15: exercisepb.GetUserStatsResponse
	(*GetExerciseCollectionsRequest)(nil),          // 16: exercisepb.GetExerciseCollectionsRequest
	(*GetExerciseCollectionsResponse)(nil),         // 17: exercisepb.GetExerciseCollectionsResponse
	(*GetUserRecentExercisesChartRequest)(nil),     // 18: exercisepb.GetUserRecentExercisesChartRequest
	(*GetUserRecentExercisesChartResponse)(nil),    // 19: exercisepb.GetUserRecentExercisesChartResponse
	(*Multilingual)(nil),                           // 20: exercisepb.Multilingual
	(*timestamppb.Timestamp)(nil),                  // 21: google.protobuf.Timestamp
	(*UserExercise)(nil),                           // 22: exercisepb.UserExercise
	(*ExerciseCollection)(nil),                     // 23: exercisepb.ExerciseCollection
	(*UserAggregatedExercise)(nil),                 // 24: exercisepb.UserAggregatedExercise
}
var file_exercisepb_hub_proto_depIdxs = []int32{
	20, // 0: exercisepb.NewExerciseRequest.content:type_name -> exercisepb.Multilingual
	21, // 1: exercisepb.AnswerExerciseResponse.nextReviewAt:type_name -> google.protobuf.Timestamp
	22, // 2: exercisepb.GetUserExercisesResponse.exercises:type_name -> exercisepb.UserExercise
	22, // 3: exercisepb.GetUserReadyForReviewExercisesResponse.exercises:type_name -> exercisepb.UserExercise
	22, // 4: exercisepb.GetUserFavoriteExercisesResponse.exercises:type_name -> exercisepb.UserExercise
	23, // 5: exercisepb.GetExerciseCollectionsResponse.collections:type_name -> exercisepb.ExerciseCollection
	21, // 6: exercisepb.GetUserRecentExercisesChartRequest.from:type_name -> google.protobuf.Timestamp
	21, // 7: exercisepb.GetUserRecentExercisesChartRequest.to:type_name -> google.protobuf.Timestamp
	24, // 8: exercisepb.GetUserRecentExercisesChartResponse.exercises:type_name -> exercisepb.UserAggregatedExercise
	0,  // 9: exercisepb.ExerciseService.NewExercise:input_type -> exercisepb.NewExerciseRequest
	4,  // 10: exercisepb.ExerciseService.AnswerExercise:input_type -> exercisepb.AnswerExerciseRequest
	2,  // 11: exercisepb.ExerciseService.UpdateExerciseAudio:input_type -> exercisepb.UpdateExerciseAudioRequest
	6,  // 12: exercisepb.ExerciseService.GetUserExercises:input_type -> exercisepb.GetUserExercisesRequest
	8,  // 13: exercisepb.ExerciseService.GetUserReadyForReviewExercises:input_type -> exercisepb.GetUserReadyForReviewExercisesRequest
	10, // 14: exercisepb.ExerciseService.ChangeExerciseFavorite:input_type -> exercisepb.ChangeExerciseFavoriteRequest
	12, // 15: exercisepb.ExerciseService.GetUserFavoriteExercises:input_type -> exercisepb.GetUserFavoriteExercisesRequest
	14, // 16: exercisepb.ExerciseService.GetUserStats:input_type -> exercisepb.GetUserStatsRequest
	16, // 17: exercisepb.ExerciseService.GetExerciseCollections:input_type -> exercisepb.GetExerciseCollectionsRequest
	18, // 18: exercisepb.ExerciseService.GetUserRecentExercisesChart:input_type -> exercisepb.GetUserRecentExercisesChartRequest
	1,  // 19: exercisepb.ExerciseService.NewExercise:output_type -> exercisepb.NewExerciseResponse
	5,  // 20: exercisepb.ExerciseService.AnswerExercise:output_type -> exercisepb.AnswerExerciseResponse
	3,  // 21: exercisepb.ExerciseService.UpdateExerciseAudio:output_type -> exercisepb.UpdateExerciseAudioResponse
	7,  // 22: exercisepb.ExerciseService.GetUserExercises:output_type -> exercisepb.GetUserExercisesResponse
	9,  // 23: exercisepb.ExerciseService.GetUserReadyForReviewExercises:output_type -> exercisepb.GetUserReadyForReviewExercisesResponse
	11, // 24: exercisepb.ExerciseService.ChangeExerciseFavorite:output_type -> exercisepb.ChangeExerciseFavoriteResponse
	13, // 25: exercisepb.ExerciseService.GetUserFavoriteExercises:output_type -> exercisepb.GetUserFavoriteExercisesResponse
	15, // 26: exercisepb.ExerciseService.GetUserStats:output_type -> exercisepb.GetUserStatsResponse
	17, // 27: exercisepb.ExerciseService.GetExerciseCollections:output_type -> exercisepb.GetExerciseCollectionsResponse
	19, // 28: exercisepb.ExerciseService.GetUserRecentExercisesChart:output_type -> exercisepb.GetUserRecentExercisesChartResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_exercisepb_hub_proto_init() }
func file_exercisepb_hub_proto_init() {
	if File_exercisepb_hub_proto != nil {
		return
	}
	file_exercisepb_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_exercisepb_hub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExerciseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExerciseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExerciseAudioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExerciseAudioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerExerciseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerExerciseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserExercisesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserExercisesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReadyForReviewExercisesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReadyForReviewExercisesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeExerciseFavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeExerciseFavoriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFavoriteExercisesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFavoriteExercisesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExerciseCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExerciseCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecentExercisesChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exercisepb_hub_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRecentExercisesChartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exercisepb_hub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exercisepb_hub_proto_goTypes,
		DependencyIndexes: file_exercisepb_hub_proto_depIdxs,
		MessageInfos:      file_exercisepb_hub_proto_msgTypes,
	}.Build()
	File_exercisepb_hub_proto = out.File
	file_exercisepb_hub_proto_rawDesc = nil
	file_exercisepb_hub_proto_goTypes = nil
	file_exercisepb_hub_proto_depIdxs = nil
}
