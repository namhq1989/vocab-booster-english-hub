// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: vocabularypb/message.proto

package vocabularypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vocabulary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId string               `protobuf:"bytes,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Term     string               `protobuf:"bytes,3,opt,name=term,proto3" json:"term,omitempty"`
	Data     *VocabularyData      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Examples []*VocabularyExample `protobuf:"bytes,5,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *Vocabulary) Reset() {
	*x = Vocabulary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vocabulary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vocabulary) ProtoMessage() {}

func (x *Vocabulary) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vocabulary.ProtoReflect.Descriptor instead.
func (*Vocabulary) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{0}
}

func (x *Vocabulary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vocabulary) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Vocabulary) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *Vocabulary) GetData() *VocabularyData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Vocabulary) GetExamples() []*VocabularyExample {
	if x != nil {
		return x.Examples
	}
	return nil
}

type VocabularyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartsOfSpeech []string `protobuf:"bytes,1,rep,name=partsOfSpeech,proto3" json:"partsOfSpeech,omitempty"`
	Ipa           string   `protobuf:"bytes,2,opt,name=ipa,proto3" json:"ipa,omitempty"`
	Audio         string   `protobuf:"bytes,3,opt,name=audio,proto3" json:"audio,omitempty"`
	Synonyms      []string `protobuf:"bytes,4,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Antonyms      []string `protobuf:"bytes,5,rep,name=antonyms,proto3" json:"antonyms,omitempty"`
}

func (x *VocabularyData) Reset() {
	*x = VocabularyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyData) ProtoMessage() {}

func (x *VocabularyData) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyData.ProtoReflect.Descriptor instead.
func (*VocabularyData) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{1}
}

func (x *VocabularyData) GetPartsOfSpeech() []string {
	if x != nil {
		return x.PartsOfSpeech
	}
	return nil
}

func (x *VocabularyData) GetIpa() string {
	if x != nil {
		return x.Ipa
	}
	return ""
}

func (x *VocabularyData) GetAudio() string {
	if x != nil {
		return x.Audio
	}
	return ""
}

func (x *VocabularyData) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *VocabularyData) GetAntonyms() []string {
	if x != nil {
		return x.Antonyms
	}
	return nil
}

type VocabularyExample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VocabularyId string        `protobuf:"bytes,2,opt,name=vocabularyId,proto3" json:"vocabularyId,omitempty"`
	FromLang     string        `protobuf:"bytes,3,opt,name=fromLang,proto3" json:"fromLang,omitempty"`
	ToLang       string        `protobuf:"bytes,4,opt,name=toLang,proto3" json:"toLang,omitempty"`
	Pos          string        `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`
	ToDefinition string        `protobuf:"bytes,6,opt,name=toDefinition,proto3" json:"toDefinition,omitempty"`
	Word         string        `protobuf:"bytes,7,opt,name=word,proto3" json:"word,omitempty"`
	PosTags      []*PosTag     `protobuf:"bytes,8,rep,name=posTags,proto3" json:"posTags,omitempty"`
	Sentiment    *Sentiment    `protobuf:"bytes,9,opt,name=sentiment,proto3" json:"sentiment,omitempty"`
	Dependencies []*Dependency `protobuf:"bytes,10,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Verbs        []*Verb       `protobuf:"bytes,11,rep,name=verbs,proto3" json:"verbs,omitempty"`
}

func (x *VocabularyExample) Reset() {
	*x = VocabularyExample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyExample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyExample) ProtoMessage() {}

func (x *VocabularyExample) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyExample.ProtoReflect.Descriptor instead.
func (*VocabularyExample) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{2}
}

func (x *VocabularyExample) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VocabularyExample) GetVocabularyId() string {
	if x != nil {
		return x.VocabularyId
	}
	return ""
}

func (x *VocabularyExample) GetFromLang() string {
	if x != nil {
		return x.FromLang
	}
	return ""
}

func (x *VocabularyExample) GetToLang() string {
	if x != nil {
		return x.ToLang
	}
	return ""
}

func (x *VocabularyExample) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *VocabularyExample) GetToDefinition() string {
	if x != nil {
		return x.ToDefinition
	}
	return ""
}

func (x *VocabularyExample) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *VocabularyExample) GetPosTags() []*PosTag {
	if x != nil {
		return x.PosTags
	}
	return nil
}

func (x *VocabularyExample) GetSentiment() *Sentiment {
	if x != nil {
		return x.Sentiment
	}
	return nil
}

func (x *VocabularyExample) GetDependencies() []*Dependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *VocabularyExample) GetVerbs() []*Verb {
	if x != nil {
		return x.Verbs
	}
	return nil
}

type PosTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word  string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PosTag) Reset() {
	*x = PosTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosTag) ProtoMessage() {}

func (x *PosTag) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosTag.ProtoReflect.Descriptor instead.
func (*PosTag) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{3}
}

func (x *PosTag) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *PosTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Sentiment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polarity     float64 `protobuf:"fixed64,1,opt,name=polarity,proto3" json:"polarity,omitempty"`
	Subjectivity float64 `protobuf:"fixed64,2,opt,name=subjectivity,proto3" json:"subjectivity,omitempty"`
}

func (x *Sentiment) Reset() {
	*x = Sentiment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentiment) ProtoMessage() {}

func (x *Sentiment) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentiment.ProtoReflect.Descriptor instead.
func (*Sentiment) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{4}
}

func (x *Sentiment) GetPolarity() float64 {
	if x != nil {
		return x.Polarity
	}
	return 0
}

func (x *Sentiment) GetSubjectivity() float64 {
	if x != nil {
		return x.Subjectivity
	}
	return 0
}

type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word   string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	DepRel string `protobuf:"bytes,2,opt,name=depRel,proto3" json:"depRel,omitempty"`
	Head   string `protobuf:"bytes,3,opt,name=head,proto3" json:"head,omitempty"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{5}
}

func (x *Dependency) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Dependency) GetDepRel() string {
	if x != nil {
		return x.DepRel
	}
	return ""
}

func (x *Dependency) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

type Verb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                string `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Past                string `protobuf:"bytes,2,opt,name=past,proto3" json:"past,omitempty"`
	PastParticiple      string `protobuf:"bytes,3,opt,name=pastParticiple,proto3" json:"pastParticiple,omitempty"`
	Gerund              string `protobuf:"bytes,4,opt,name=gerund,proto3" json:"gerund,omitempty"`
	ThirdPersonSingular string `protobuf:"bytes,5,opt,name=thirdPersonSingular,proto3" json:"thirdPersonSingular,omitempty"`
}

func (x *Verb) Reset() {
	*x = Verb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verb) ProtoMessage() {}

func (x *Verb) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verb.ProtoReflect.Descriptor instead.
func (*Verb) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{6}
}

func (x *Verb) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Verb) GetPast() string {
	if x != nil {
		return x.Past
	}
	return ""
}

func (x *Verb) GetPastParticiple() string {
	if x != nil {
		return x.PastParticiple
	}
	return ""
}

func (x *Verb) GetGerund() string {
	if x != nil {
		return x.Gerund
	}
	return ""
}

func (x *Verb) GetThirdPersonSingular() string {
	if x != nil {
		return x.ThirdPersonSingular
	}
	return ""
}

var File_vocabularypb_message_proto protoreflect.FileDescriptor

var file_vocabularypb_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x22, 0xbb, 0x01, 0x0a, 0x0a, 0x56,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x08, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x08,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x56, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x70, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x79, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x79, 0x6d,
	0x73, 0x22, 0x94, 0x03, 0x0a, 0x11, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x4c, 0x61, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4c, 0x61, 0x6e, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x54, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x73, 0x54, 0x61, 0x67,
	0x52, 0x07, 0x70, 0x6f, 0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72,
	0x62, 0x52, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x54,
	0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x09,
	0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x4c, 0x0a, 0x0a, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x70, 0x52, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70,
	0x52, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x04, 0x56, 0x65, 0x72, 0x62,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x61, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x72, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x72, 0x75, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x53, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x42, 0xb4, 0x01, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x42,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x42, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x2d, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x65,
	0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x2d, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x56, 0x6f, 0x63, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0xca, 0x02, 0x0c, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0xe2, 0x02, 0x18, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vocabularypb_message_proto_rawDescOnce sync.Once
	file_vocabularypb_message_proto_rawDescData = file_vocabularypb_message_proto_rawDesc
)

func file_vocabularypb_message_proto_rawDescGZIP() []byte {
	file_vocabularypb_message_proto_rawDescOnce.Do(func() {
		file_vocabularypb_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_vocabularypb_message_proto_rawDescData)
	})
	return file_vocabularypb_message_proto_rawDescData
}

var file_vocabularypb_message_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_vocabularypb_message_proto_goTypes = []interface{}{
	(*Vocabulary)(nil),        // 0: vocabularypb.Vocabulary
	(*VocabularyData)(nil),    // 1: vocabularypb.VocabularyData
	(*VocabularyExample)(nil), // 2: vocabularypb.VocabularyExample
	(*PosTag)(nil),            // 3: vocabularypb.PosTag
	(*Sentiment)(nil),         // 4: vocabularypb.Sentiment
	(*Dependency)(nil),        // 5: vocabularypb.Dependency
	(*Verb)(nil),              // 6: vocabularypb.Verb
}
var file_vocabularypb_message_proto_depIdxs = []int32{
	1, // 0: vocabularypb.Vocabulary.data:type_name -> vocabularypb.VocabularyData
	2, // 1: vocabularypb.Vocabulary.examples:type_name -> vocabularypb.VocabularyExample
	3, // 2: vocabularypb.VocabularyExample.posTags:type_name -> vocabularypb.PosTag
	4, // 3: vocabularypb.VocabularyExample.sentiment:type_name -> vocabularypb.Sentiment
	5, // 4: vocabularypb.VocabularyExample.dependencies:type_name -> vocabularypb.Dependency
	6, // 5: vocabularypb.VocabularyExample.verbs:type_name -> vocabularypb.Verb
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_vocabularypb_message_proto_init() }
func file_vocabularypb_message_proto_init() {
	if File_vocabularypb_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vocabularypb_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vocabulary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyExample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentiment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vocabularypb_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vocabularypb_message_proto_goTypes,
		DependencyIndexes: file_vocabularypb_message_proto_depIdxs,
		MessageInfos:      file_vocabularypb_message_proto_msgTypes,
	}.Build()
	File_vocabularypb_message_proto = out.File
	file_vocabularypb_message_proto_rawDesc = nil
	file_vocabularypb_message_proto_goTypes = nil
	file_vocabularypb_message_proto_depIdxs = nil
}
